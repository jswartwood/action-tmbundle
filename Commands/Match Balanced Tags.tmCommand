<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/usr/bin/env ruby
page = STDIN.read

page.gsub!(/&lt;%--.*?--%&gt;/m, '')
page.gsub!(/.*?(&lt;[^\s&gt;]+).*?(\/?\&gt;).*?(&lt;[^\s&gt;]+).*?(\/?\&gt;).*?/m, '\1\2\3\4')

tagStack = []
unsure = {}
bad = {}
good = {}

tags = page.gsub(/&gt;&lt;/m, '&gt; &lt;').split(' ')

def justTagName(str)
	return str.sub(/.*?&lt;\/?(.*?)&gt;.*?/, '\1')
end

tags.each_index do |i|
	tag = tags[i]
	
	if tag.include?('/&gt;')
		good[i] = true
	elsif tag.include?('&lt;/')
		if justTagName(tags[tagStack.last]) == justTagName(tag)
			good[i] = true
			good[tagStack.pop] = true
		else
			unsure[i] = true
		end
	else
		tagStack.push(i)
	end
end

tags.each_index do |i|
	puts good[i] ? 'good' : unsure[i] ? 'unsure' : 'bad'
	puts tags[i].gsub(/&lt;/, '&amp;lt;').gsub(/&gt;/, '&amp;gt;&lt;br/&gt;')
end
</string>
	<key>fallbackInput</key>
	<string>document</string>
	<key>input</key>
	<string>selection</string>
	<key>name</key>
	<string>Match Balanced Tags</string>
	<key>output</key>
	<string>showAsHTML</string>
	<key>scope</key>
	<string>text.html</string>
	<key>uuid</key>
	<string>C4C5ECA4-93FF-4F7D-A4B3-5B07C431E0AB</string>
</dict>
</plist>
