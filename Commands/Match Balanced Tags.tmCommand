<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>beforeRunningCommand</key>
	<string>nop</string>
	<key>command</key>
	<string>#!/usr/bin/env ruby
page = STDIN.read

page.gsub!(/&lt;%.*?%&gt;/m, '')

page.gsub!(/.*?(&lt;[^\s&gt;]+).*?(\/?\&gt;).*?(&lt;[^\s&gt;]+).*?(\/?\&gt;).*?/m, '\1\2\3\4')

tagStack = []
unsure = {}
bad = {}
good = {}

tags = page.gsub(/&gt;&lt;/m, '&gt; &lt;').split(' ')

def justTagName(str)
	return str.sub(/.*?&lt;\/?(.*?)&gt;.*?/, '\1')
end

tags.each_index do |i|
	tag = tags[i]
	
	if tag.include?('/&gt;')
		good[i] = true
	elsif tag.include?('&lt;/')
		if justTagName(tags[tagStack.last]) == justTagName(tag)
			good[i] = true
			good[tagStack.pop] = true
		else
			bad[i] = true
		end
	else
		tagStack.push(i)
	end
end

print '&lt;style&gt;'
print '.tag {margin:6px 0;padding:8px 20px;-webkit-box-shadow:1px 1px 3px #222;box-shadow:1px 1px 3px #222;}'
print '.good {background-color:#8f8;}'
print '.bad {background-color:#f88;}'
print '.unsure {background-color:#ff8;}'
print '.dim {display:none;}'
print 'label {margin-right:20px;}'
print '* {color:#262626;text-shadow: 1px 1px 1px rgba(46, 40, 15, .25);}'
print '&lt;/style&gt;'

print '&lt;input type="checkbox" checked=checked id="good_check" value="good"/&gt; '
print '&lt;label for="good_check"&gt;Good&lt;/label&gt; '
print '&lt;input type="checkbox" checked=checked id="bad_check" value="bad"/&gt; '
print '&lt;label for="bad_check"&gt;Bad&lt;/label&gt; '
print '&lt;input type="checkbox" checked=checked id="unsure_check" value="unsure"/&gt; '
print '&lt;label for="unsure_check"&gt;Unsure&lt;/label&gt;'

print '&lt;script type="text/javascript"&gt;'
print 'function dim(c) {'
print 'var els = document.getElementsByClassName(c);'
print 'for (var i = 0, j = els.length; i &lt; j; i++) {'
print 'els[i].className += " dim";'
print '}}'
print 'function unDim(c) {'
print 'var els = document.getElementsByClassName(c);'
print 'for (var i = 0, j = els.length; i &lt; j; i++) {'
print 'els[i].className = els[i].className.replace(" dim", "");'
print '}}'
print 'var ins = document.getElementsByTagName("input");'
print 'for (var i = 0, j = ins.length; i &lt; j; i++) {'
print 'ins[i].addEventListener("change", function() {'
print 'if (this.checked) {unDim(this.value);} else {dim(this.value);}'
print '});}'
print '&lt;/script&gt;'

tags.each_index do |i|
	print '&lt;p class="tag '
	print good[i] ? 'good' : bad[i] ? 'bad' : 'unsure'
	print '"&gt;'
	print tags[i].gsub(/&lt;/, '&amp;lt;').gsub(/&gt;/, '&amp;gt;&lt;br/&gt;')
	puts '&lt;/p&gt;'
end
</string>
	<key>fallbackInput</key>
	<string>document</string>
	<key>input</key>
	<string>selection</string>
	<key>name</key>
	<string>Match Balanced Tags</string>
	<key>output</key>
	<string>showAsHTML</string>
	<key>scope</key>
	<string>text.html</string>
	<key>uuid</key>
	<string>C4C5ECA4-93FF-4F7D-A4B3-5B07C431E0AB</string>
</dict>
</plist>
